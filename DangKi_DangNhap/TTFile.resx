<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAcAAAAF1CAYAAAB/Ijq1AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAreSURBVHhe7d0/yBx1HsfxpHqeLukunakklaSSNGIaMY2Y
        RrQQTCFoIShYGK64XQzk8ECjCIYTPAWLiKARBD1B7qk0zclTiBFBjSDGKsQm3DWXvfnOzuYZ42j+PE+S
        nXxeX3hB3GR21+rNb/Y3M9uMMcYYc8Nmsrexv3GoMQWAAU82qhWNUU7FbnqssdaYAcAmrDfebNpysIvM
        ss1kX/MFjzfOdF/4V/bdfXx27z2vzx5+6O3ZX/78IQD8xmOPnmhbUYZa0jjfONE055EuPrdy2tXex70v
        N9t9x4uzp596b/avf/579r8LZwHgun21frqN4967Xu2HsHx9i1aFk93NhzcVnn+RnTuOzip6X5z6cvB/
        AAA267vT38xeeuGTdqG16E9jbX4W8qZM/Uh56YNnFb6fvv928MsCwFa7cO7HNoS1+Or16FgXqRs17eaW
        9sMefOCttsZDXw4AbrRzZ3+YPffsB7OVlSMXuzbVanBnF6ytmnrDjd/6Xnvl08EvAwA322dr6/3VYP02
        uKeL12anjV9tQ20/wOYWAJZNnZFcbJTZvn3yS9OuvV3ENjPzlV/96Fi7cYY+GAButTolev99byxWgmea
        CO7qQnY9M//Nr1Z+fu8DYNnVBpm69ryL4Kkmgqtd0K5l5rs9V1eOOO0JwGjUlQm9SyVOdFG72mkvcG8P
        tuEFgLGp69JrATdvWS3ornqmJ+ugutRh6I0BYNnVtYLdYu7nqzwVOl/9VTld4A7AmG3cQm3yTBe5P5r5
        rs+6w8vQmwHAWLz/zuf9VeAfXSQ/OVD/sHZ9Wv0BcDvo7Qr9axe7oalnLk3bO28PvQkAjE1dydAF8Osu
        dkPTPmvJBe8A3FY2bpU2eJu0egT9dLbnzpcHDwaAsaqH7XYBPNxFrz/tE92d/gTgttPbDLPWRa8/dW50
        2t5Ve+hgABirukVa78L4y3eDtmUcPBAAxq53TWD/d8C6Y/b8iQ9DBwHA2G08KaL2vFyayb56sa6VGDoI
        AMautxHmUBe/msnBetG9PwG4XdUmzy6A/Z2gdY+06eyJx98dPAgAxm7j5tiTaRe/mvoPl0AAcPvqrQAF
        EIAcAghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAA
        kQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJAACIJ
        IACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAA
        IgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQS
        QAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAA
        RBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgk
        gABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQAB
        iCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJ
        AAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgAC
        EEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCS
        AAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEE
        IJIAAhBJAAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAk
        AQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACRBBCASAII
        QCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBI
        AghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQ
        gEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACR
        BBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkg
        AJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJAACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAi
        CSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABEEkAAIgkgAJEEEIBIAghAJAEEIJIAAhBJAAGIJIAARBJA
        ACIJIACRBBCASAIIQCQBBCCSAAIQSQABiCSAAEQSQAAiCSAAkQQQgEgCCEAkAQQgkgACEEkAAYgkgABE
        EkAAIgkgAJEEEIBIAghAJAEEIJIAAhDp9wJ4uF58+qn3Bg8CgLF76YVPBgP4SL348ENvDx4EAGN39PmP
        BgO4v168957XBw8CgLGrs5xdAA918auZ7K4Xd9/x4uBBADB2dZazC+CBLn41k9V6cXX1yOBBADB2dZaz
        C+DeLn6Lmf5cf/HT998OHggAY7brT39bBHB3F77FTD+uv3jtlU8HDwSAsfpsbb2L3/RMF73+1I+C09n9
        970xeDAAjNXGNYDT4130+jPZuX3b5L+rK0dm587+MPgGADBGe+96tQtgXfUwONO1+gf/+Pva4BsAwNh8
        d/qbxervfBPA1S54l8/kyfpHVcqhNwGAsdm4/m96oovd0LSXQ7S7Qd9/5/PBNwKAsagrG1ZWjlycB/A3
        lz9cPpNn6h/WdtEL534cfEMAGIMHH3hrsfo72UXuSjNdrwPqxqFDbwgAy+6LU18u4vefZnG3qwvclWZy
        sA7asePoxa/WTw++MQAsqzqDubHzc3qsi9vVTi0X5/cHdVkEAGPSO/V5plnU7ezCdrXTbohpT4XW/dP8
        HgjAGDz37Adt/LZvn/zStGxPF7VrnfYpEe2u0McePTH4QQCwLOo69mrW3K+e+nA9M9lfd4ipN6slpdOh
        ACyj3u3OKn6Hu4htdiYH5kvJ+UXydVX90IcDwM1WP9FtPOtvS+O3mDqPWj8mTmc7dxx1oTwAt1xd6rDY
        7dn95newi9ZWT+2kmd8vtNTmmHrExNCXAoAbpe7wUntTFj1q1G7PK93pZbNTu0Mn0+bDzi8+uH4bdL0g
        ADdaha92eW7c3qx1bL5Au2nTrgabD60r7OdfYs+dL8/qpqNWhQBslVpg1Z3J9t19fBG8hZNNiy5/uvvN
        nLq9zPTNxqUVYal7idYp0lqi1s6cUttTF38GgL5qxNHnP2r//MTj77YNqYVVvy2NWnRV+PZ1EVqWqQcN
        tqvCdrMMAGyBuh69WWjVBpfffZ7fMk3tGq0gtqYAcA0qdtWPZVvpGWOMMWOebdv+D4/q58KvB32xAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>