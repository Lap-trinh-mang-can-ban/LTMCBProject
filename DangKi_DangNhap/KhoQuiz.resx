<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEP
        AABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBA
        GJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbk
        AwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAA
        EEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR
        +QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4A
        AIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABh
        RD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEP
        AABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBA
        GJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbk
        AwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAA
        EEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR
        +QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4A
        AIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABhRD4AAIQR+QAAEEbkAwBAGJEPAABh
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>