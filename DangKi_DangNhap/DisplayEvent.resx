<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAkEAAAGoCAYAAABBpzF6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAy7SURBVHhe7d0/yBx1HsfxJ1WeLukunU8lqSSVpBHTiGnE
        NCEWgaQQtBAULAxX3CwGcnigUQTDCV6EFI8IGuFAT5B7Kk1zkkKMCGoEMVYhNuGuuezNd3Y2zxrnNP+e
        5Jl8Xl94QdxnZ3ft3vxmfjNLxhhjjDFmw6bZ1drTOtyaAAAMeLpVvdAa5VTwTI631lpTAIBbcLZ1su2L
        fX1obLZpdrc/8ETrfP+Df2H3gyemDz/05vTA/lPTP/3x7wAAv3Lo4GrXC2WoJ1qXWqttdzzRB8jdnG7V
        56OFHzddue/l6bPPvDf95z/+Nf3v5QsAADfty7PnukDa9cDrizFUvrpLq0PNSvvlbYnNfsj2bcemFT6f
        n/li8H8AAOBWfXvu6+krL33cLbjMG6S1NjsjdUemLlq6+sXTip8fv/tm8McCANxuly/+0MVQLcIsNMnx
        PlQ2aroLnrsve/yxt7siG/pxAAAb7eKF76cvPP/BdOvWo1f6PqlVoe19tNyuqQ9cv/bnjdc+GfwxAAB3
        2qdrZxdXhepaoZ19wNzqdAFU29O6L3DBMwCw2dTZqfnF01u2ND+3/bKrD5lbmdkKUF2EVFdoD30xAMDd
        VqfHHn3krfmK0Pk2hHb0MXMzM7sGqFaAXP8DAGx2ddF03Z+wD6EzbQgt91FzIzPbBba89ahTYADAaNSu
        9YVt9Kt92FzvdDdB7A52ETQAMDZ178JayJn1TC3sXPdMTtdBtQ1+6IMBADa7updQv6jz03WeFputAlU9
        uQkiADBm64/baJ7rQ+e3ZrYbrO4EPfRhAABj8f47ny2uBv3WjRSbvfXG2g1mFQgAuBcs7Bb7cx88QzM5
        WW+qp7UOfQgAwNjULvc+gr7qg2doJpfqTW6KCADcS9YfqzH4SI1mT/1x5/2vDh4MADBWhw6uziPoSB8+
        izM5UX90KgwAuNcsXCC91ofP4tR5skn3JNahgwEAxqoep7Fw88Rrd4l1dTR4IADA2C3cM2jxuqB6yurs
        SfFDBwEAjN36E+brOuir0+yuF2sf/dBBAABjt3Bx9OE+gGqaffWiZ4UBAPeq2vzVR9DiDrF6nsZk+tST
        7w4eBAAwdusPVG0mfQDV1H/YHg8A3LsWVoJEEACQQwQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQB
        AJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ
        SQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFE
        EAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQSQQBAJFEEAAQ6f9F
        0JF68dln3hs8CABg7F556ePBCHqiXjyw/9TgQQAAY3fsxQ8HI2hPvfjwQ28OHgQAMHZ1xquPoMN9ANU0
        K/Xiyn0vDx4EADB2dcarj6C9fQDVNMv14vLy0cGDAADGrs549RG0qw+g+Ux+qj/8+N03gwcCAIzZjj/8
        ZR5BK338zGfyUf3hjdc+GTwQAGCsPl072wfQ5HwfPotTFwlNpo8+8tbgwQAAY7V+j6DJiT58FqfZvmWp
        +c/y1qPTixe+H/wAAIAx2vXA630E1Y74wZms1Rv+9te1wQ8AABibb899PV8FutRG0HIfPddO83S9qWpp
        6EMAAMZm/f5Ak9U+eIam2yrf7RJ7/53PBj8IAGAsatf71q1Hr8wi6Fdb46+d5rl6Y20ju3zxh8EPBAAY
        g8cfe3u+CnS6D53fm8nZOqAeNDb0gQAAm93nZ76YB9C/l5aaHX3k/N40++qgbduOXfny7LnBDwYA2Kzq
        bNb6jrDJ8T5wrndq2Wj2PDFb5gGAMVk4DXZ+aanZ3sfN9U53kXR3WqyeteH6IABgDF54/oMugLZsaX5u
        e2ZnHzY3Ot3T5bvdYocOrg5+EQDAZlH3OqxumfnF0+JvZpo9dSfp+rBaWnJqDADYjBYejVEBdKQPmVud
        Zu9sSWl2I8W68+LQlwMA3Gl1yc6B/ac2IoDmU+fU6uKiyXT7tmNupggA3HW1DX6+C6y/BmhfHy63e+rq
        6tnzxUpdMF2Pph/6UQAAG6XuBF3XK8+bpFW7wH7vjtC3OrVrrJm0X3Zp/sV1rZD7CQEAG63ip3Z/rT8K
        o3N8tlBzx6ZbFWq/tO7COPsRO+9/dVoPKbM6BADcLrXQUk+x2P3giXn0zJ1ue2SlD5O7MXUb6snJ1tWV
        oVLPHqvTZbVUVVdrl9q2Nv83AMCi6oRjL37Y/fupJ9/tOqIWWBb7olWLLxU/u/sQ2SzT7Gl/WK0OdRdQ
        AwDcBnXPwpNtZ+xrLffRsZmndpNVFHUmAAA3oIKnGmKzrfgYY4wxxox5lpb+B3dP7s0E++O7AAAAAElF
        TkSuQmCC
</value>
  </data>
</root>